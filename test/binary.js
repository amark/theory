module.exports=require('../theory')
('binary',function(a){
	describe('Binary',function(){
		it('is()',function(){
			expect(theory.bi(false).is()).to.be(true);
			expect(theory.bi(true).is()).to.be(true);
			expect(theory.bi('').is()).to.be(false);
			expect(theory.bi('a').is()).to.be(false);
			expect(theory.bi(0).is()).to.be(false);
			expect(theory.bi(1).is()).to.be(false);
			expect(theory.bi([]).is()).to.be(false);
			expect(theory.bi([1]).is()).to.be(false);
			expect(theory.bi({}).is()).to.be(false);
			expect(theory.bi({a:1}).is()).to.be(false);
			expect(theory.bi(function(){}).is()).to.be(false);
		});
		it('is',function(){
			expect(theory.bi.is(false)).to.be(true);
			expect(theory.bi.is(true)).to.be(true);
			expect(theory.bi.is('')).to.be(false);
			expect(theory.bi.is('a')).to.be(false);
			expect(theory.bi.is(0)).to.be(false);
			expect(theory.bi.is(1)).to.be(false);
			expect(theory.bi.is([])).to.be(false);
			expect(theory.bi.is([1])).to.be(false);
			expect(theory.bi.is({})).to.be(false);
			expect(theory.bi.is({a:1})).to.be(false);
			expect(theory.bi.is(function(){})).to.be(false);
		});
	});
	return true;
});